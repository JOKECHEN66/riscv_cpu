终端机在文法中未使用

    MK_DOT
    ERROR


状态 205 冲突：1 项偏移/归约


语法

    0 $accept: program $end

    1 program: global_decl_list
    2        | ε

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB
   16       | dim_fn MK_LB expr MK_RB

   17 expr_null: expr
   18          | ε

   19 block: decl_list stmt_list
   20      | stmt_list
   21      | decl_list
   22      | ε

   23 decl_list: decl_list decl
   24          | decl

   25 decl: type_decl
   26     | var_decl

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON
   28          | TYPEDEF VOID id_list MK_SEMICOLON

   29 var_decl: type init_id_list MK_SEMICOLON

   30 type: INT
   31     | FLOAT
   32     | ID

   33 id_list: ID
   34        | id_list MK_COMMA ID
   35        | id_list MK_COMMA ID dim_decl
   36        | ID dim_decl

   37 dim_decl: MK_LB cexpr MK_RB
   38         | dim_decl MK_LB cexpr MK_RB

   39 cexpr: cexpr OP_PLUS mcexpr
   40      | cexpr OP_MINUS mcexpr
   41      | mcexpr

   42 mcexpr: mcexpr OP_TIMES cfactor
   43       | mcexpr OP_DIVIDE cfactor
   44       | cfactor

   45 cfactor: CONST
   46        | OP_MINUS cfactor
   47        | MK_LPAREN cexpr MK_RPAREN

   48 init_id_list: init_id
   49             | init_id_list MK_COMMA init_id

   50 init_id: ID
   51        | ID dim_decl
   52        | ID OP_ASSIGN relop_expr

   53 stmt_list: stmt_list stmt
   54          | stmt

   55 stmt: MK_LBRACE block MK_RBRACE
   56     | WHILE MK_LPAREN test MK_RPAREN stmt
   57     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   58     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   59     | IF MK_LPAREN test MK_RPAREN stmt
   60     | IF MK_LPAREN test MK_RPAREN stmt ELSE stmt
   61     | ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
   62     | MK_SEMICOLON
   63     | RETURN MK_SEMICOLON
   64     | RETURN relop_expr MK_SEMICOLON

   65 assign_expr_list: nonempty_assign_expr_list
   66                 | ε

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   68                          | assign_expr

   69 test: assign_expr

   70 assign_expr: ID OP_ASSIGN relop_expr
   71            | relop_expr

   72 relop_expr: relop_term
   73           | relop_expr OP_OR relop_term

   74 relop_term: relop_factor
   75           | relop_term OP_AND relop_factor

   76 relop_factor: expr
   77             | expr rel_op expr

   78 rel_op: OP_EQ
   79       | OP_GE
   80       | OP_LE
   81       | OP_NE
   82       | OP_GT
   83       | OP_LT

   84 relop_expr_list: nonempty_relop_expr_list
   85                | ε

   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | relop_expr

   88 expr: expr add_op term
   89     | term

   90 add_op: OP_PLUS
   91       | OP_MINUS

   92 term: term mul_op factor
   93     | factor

   94 mul_op: OP_TIMES
   95       | OP_DIVIDE

   96 factor: MK_LPAREN relop_expr MK_RPAREN
   97       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | CONST
  100       | OP_MINUS CONST
  101       | OP_NOT CONST
  102       | ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  105       | var_ref
  106       | OP_MINUS var_ref
  107       | OP_NOT var_ref

  108 var_ref: ID
  109        | ID dim_list

  110 dim_list: dim_list MK_LB expr MK_RB
  111         | MK_LB expr MK_RB


终结语词，附有它们出现处的规则

    $end (0) 0
    error (256)
    ID <lexeme> (258) 7 8 9 10 13 14 32 33 34 35 36 50 51 52 61 70 102 103 104 108 109
    CONST <const1> (259) 45 99 100 101
    VOID (260) 8 10 28
    INT (261) 30
    FLOAT (262) 31
    IF (263) 59 60
    ELSE (264) 60
    WHILE (265) 56
    FOR (266) 57
    TYPEDEF (267) 27 28
    OP_ASSIGN (268) 52 58 70
    OP_OR (269) 73
    OP_AND (270) 75
    OP_NOT (271) 98 101 104 107
    OP_EQ (272) 78
    OP_NE (273) 81
    OP_GT (274) 82
    OP_LT (275) 83
    OP_GE (276) 79
    OP_LE (277) 80
    OP_PLUS (278) 39 90
    OP_MINUS (279) 40 46 91 97 100 103 106
    OP_TIMES (280) 42 94
    OP_DIVIDE (281) 43 95
    MK_LB (282) 15 16 37 38 110 111
    MK_RB (283) 15 16 37 38 110 111
    MK_LPAREN (284) 7 8 9 10 47 56 57 59 60 61 96 97 98 102 103 104
    MK_RPAREN (285) 7 8 9 10 47 56 57 59 60 61 96 97 98 102 103 104
    MK_LBRACE (286) 7 8 9 10 55
    MK_RBRACE (287) 7 8 9 10 55
    MK_COMMA (288) 11 34 35 49 67 86
    MK_SEMICOLON (289) 27 28 29 57 58 61 62 63 64
    MK_DOT (290)
    ERROR (291)
    RETURN (292) 63 64


非终结语词，附有它们出现处的规则

    $accept (38)
        on left: 0
    program <node> (39)
        on left: 1 2
        on right: 0
    global_decl_list <node> (40)
        on left: 3 4
        on right: 1 3
    global_decl <node> (41)
        on left: 5 6
        on right: 3 4
    function_decl <node> (42)
        on left: 7 8 9 10
        on right: 5 6
    param_list <node> (43)
        on left: 11 12
        on right: 7 8 11
    param <node> (44)
        on left: 13 14
        on right: 11 12
    dim_fn <node> (45)
        on left: 15 16
        on right: 14 16
    expr_null <node> (46)
        on left: 17 18
        on right: 15
    block <node> (47)
        on left: 19 20 21 22
        on right: 7 8 9 10 55
    decl_list <node> (48)
        on left: 23 24
        on right: 5 19 21 23
    decl <node> (49)
        on left: 25 26
        on right: 23 24
    type_decl <node> (50)
        on left: 27 28
        on right: 25
    var_decl <node> (51)
        on left: 29
        on right: 26
    type <node> (52)
        on left: 30 31 32
        on right: 7 9 13 14 27 29
    id_list <node> (53)
        on left: 33 34 35 36
        on right: 27 28 34 35
    dim_decl <node> (54)
        on left: 37 38
        on right: 35 36 38 51
    cexpr <node> (55)
        on left: 39 40 41
        on right: 37 38 39 40 47
    mcexpr <node> (56)
        on left: 42 43 44
        on right: 39 40 41 42 43
    cfactor <node> (57)
        on left: 45 46 47
        on right: 42 43 44 46
    init_id_list <node> (58)
        on left: 48 49
        on right: 29 49
    init_id <node> (59)
        on left: 50 51 52
        on right: 48 49
    stmt_list <node> (60)
        on left: 53 54
        on right: 19 20 53
    stmt <node> (61)
        on left: 55 56 57 58 59 60 61 62 63 64
        on right: 53 54 56 57 59 60
    assign_expr_list <node> (62)
        on left: 65 66
        on right: 57
    nonempty_assign_expr_list <node> (63)
        on left: 67 68
        on right: 65 67
    test <node> (64)
        on left: 69
        on right: 56 59 60
    assign_expr <node> (65)
        on left: 70 71
        on right: 67 68 69
    relop_expr <node> (66)
        on left: 72 73
        on right: 52 58 64 70 71 73 86 87 96 97 98
    relop_term <node> (67)
        on left: 74 75
        on right: 72 73 75
    relop_factor <node> (68)
        on left: 76 77
        on right: 74 75
    rel_op <node> (69)
        on left: 78 79 80 81 82 83
        on right: 77
    relop_expr_list <node> (70)
        on left: 84 85
        on right: 57 61 102 103 104
    nonempty_relop_expr_list <node> (71)
        on left: 86 87
        on right: 84 86
    expr <node> (72)
        on left: 88 89
        on right: 16 17 76 77 88 110 111
    add_op <node> (73)
        on left: 90 91
        on right: 88
    term <node> (74)
        on left: 92 93
        on right: 88 89 92
    mul_op <node> (75)
        on left: 94 95
        on right: 92
    factor <node> (76)
        on left: 96 97 98 99 100 101 102 103 104 105 106 107
        on right: 92 93
    var_ref <node> (77)
        on left: 108 109
        on right: 58 105 106 107
    dim_list <node> (78)
        on left: 110 111
        on right: 109 110


状态 0

    0 $accept: • program $end

    ID       偏移，并进入状态 1
    VOID     偏移，并进入状态 2
    INT      偏移，并进入状态 3
    FLOAT    偏移，并进入状态 4
    TYPEDEF  偏移，并进入状态 5

    $default  使用规则 2 以归约 (program)

    program           转到状态 6
    global_decl_list  转到状态 7
    global_decl       转到状态 8
    function_decl     转到状态 9
    decl_list         转到状态 10
    decl              转到状态 11
    type_decl         转到状态 12
    var_decl          转到状态 13
    type              转到状态 14


状态 1

   32 type: ID •

    $default  使用规则 32 以归约 (type)


状态 2

    8 function_decl: VOID • ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID • ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  偏移，并进入状态 15


状态 3

   30 type: INT •

    $default  使用规则 30 以归约 (type)


状态 4

   31 type: FLOAT •

    $default  使用规则 31 以归约 (type)


状态 5

   27 type_decl: TYPEDEF • type id_list MK_SEMICOLON
   28          | TYPEDEF • VOID id_list MK_SEMICOLON

    ID     偏移，并进入状态 1
    VOID   偏移，并进入状态 16
    INT    偏移，并进入状态 3
    FLOAT  偏移，并进入状态 4

    type  转到状态 17


状态 6

    0 $accept: program • $end

    $end  偏移，并进入状态 18


状态 7

    1 program: global_decl_list •
    3 global_decl_list: global_decl_list • global_decl

    ID       偏移，并进入状态 1
    VOID     偏移，并进入状态 2
    INT      偏移，并进入状态 3
    FLOAT    偏移，并进入状态 4
    TYPEDEF  偏移，并进入状态 5

    $default  使用规则 1 以归约 (program)

    global_decl    转到状态 19
    function_decl  转到状态 9
    decl_list      转到状态 10
    decl           转到状态 11
    type_decl      转到状态 12
    var_decl       转到状态 13
    type           转到状态 14


状态 8

    4 global_decl_list: global_decl •

    $default  使用规则 4 以归约 (global_decl_list)


状态 9

    6 global_decl: function_decl •

    $default  使用规则 6 以归约 (global_decl)


状态 10

    5 global_decl: decl_list • function_decl
   23 decl_list: decl_list • decl

    ID       偏移，并进入状态 1
    VOID     偏移，并进入状态 2
    INT      偏移，并进入状态 3
    FLOAT    偏移，并进入状态 4
    TYPEDEF  偏移，并进入状态 5

    function_decl  转到状态 20
    decl           转到状态 21
    type_decl      转到状态 12
    var_decl       转到状态 13
    type           转到状态 14


状态 11

   24 decl_list: decl •

    $default  使用规则 24 以归约 (decl_list)


状态 12

   25 decl: type_decl •

    $default  使用规则 25 以归约 (decl)


状态 13

   26 decl: var_decl •

    $default  使用规则 26 以归约 (decl)


状态 14

    7 function_decl: type • ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type • ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   29 var_decl: type • init_id_list MK_SEMICOLON

    ID  偏移，并进入状态 22

    init_id_list  转到状态 23
    init_id       转到状态 24


状态 15

    8 function_decl: VOID ID • MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID • MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  偏移，并进入状态 25


状态 16

   28 type_decl: TYPEDEF VOID • id_list MK_SEMICOLON

    ID  偏移，并进入状态 26

    id_list  转到状态 27


状态 17

   27 type_decl: TYPEDEF type • id_list MK_SEMICOLON

    ID  偏移，并进入状态 26

    id_list  转到状态 28


状态 18

    0 $accept: program $end •

    $default  接受


状态 19

    3 global_decl_list: global_decl_list global_decl •

    $default  使用规则 3 以归约 (global_decl_list)


状态 20

    5 global_decl: decl_list function_decl •

    $default  使用规则 5 以归约 (global_decl)


状态 21

   23 decl_list: decl_list decl •

    $default  使用规则 23 以归约 (decl_list)


状态 22

    7 function_decl: type ID • MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID • MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   50 init_id: ID •
   51        | ID • dim_decl
   52        | ID • OP_ASSIGN relop_expr

    OP_ASSIGN  偏移，并进入状态 29
    MK_LB      偏移，并进入状态 30
    MK_LPAREN  偏移，并进入状态 31

    $default  使用规则 50 以归约 (init_id)

    dim_decl  转到状态 32


状态 23

   29 var_decl: type init_id_list • MK_SEMICOLON
   49 init_id_list: init_id_list • MK_COMMA init_id

    MK_COMMA      偏移，并进入状态 33
    MK_SEMICOLON  偏移，并进入状态 34


状态 24

   48 init_id_list: init_id •

    $default  使用规则 48 以归约 (init_id_list)


状态 25

    8 function_decl: VOID ID MK_LPAREN • param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN • MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         偏移，并进入状态 1
    INT        偏移，并进入状态 3
    FLOAT      偏移，并进入状态 4
    MK_RPAREN  偏移，并进入状态 35

    param_list  转到状态 36
    param       转到状态 37
    type        转到状态 38


状态 26

   33 id_list: ID •
   36        | ID • dim_decl

    MK_LB  偏移，并进入状态 30

    $default  使用规则 33 以归约 (id_list)

    dim_decl  转到状态 39


状态 27

   28 type_decl: TYPEDEF VOID id_list • MK_SEMICOLON
   34 id_list: id_list • MK_COMMA ID
   35        | id_list • MK_COMMA ID dim_decl

    MK_COMMA      偏移，并进入状态 40
    MK_SEMICOLON  偏移，并进入状态 41


状态 28

   27 type_decl: TYPEDEF type id_list • MK_SEMICOLON
   34 id_list: id_list • MK_COMMA ID
   35        | id_list • MK_COMMA ID dim_decl

    MK_COMMA      偏移，并进入状态 40
    MK_SEMICOLON  偏移，并进入状态 42


状态 29

   52 init_id: ID OP_ASSIGN • relop_expr

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    relop_expr    转到状态 48
    relop_term    转到状态 49
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 30

   37 dim_decl: MK_LB • cexpr MK_RB

    CONST      偏移，并进入状态 55
    OP_MINUS   偏移，并进入状态 56
    MK_LPAREN  偏移，并进入状态 57

    cexpr    转到状态 58
    mcexpr   转到状态 59
    cfactor  转到状态 60


状态 31

    7 function_decl: type ID MK_LPAREN • param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN • MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         偏移，并进入状态 1
    INT        偏移，并进入状态 3
    FLOAT      偏移，并进入状态 4
    MK_RPAREN  偏移，并进入状态 61

    param_list  转到状态 62
    param       转到状态 37
    type        转到状态 38


状态 32

   38 dim_decl: dim_decl • MK_LB cexpr MK_RB
   51 init_id: ID dim_decl •

    MK_LB  偏移，并进入状态 63

    $default  使用规则 51 以归约 (init_id)


状态 33

   49 init_id_list: init_id_list MK_COMMA • init_id

    ID  偏移，并进入状态 64

    init_id  转到状态 65


状态 34

   29 var_decl: type init_id_list MK_SEMICOLON •

    $default  使用规则 29 以归约 (var_decl)


状态 35

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN • MK_LBRACE block MK_RBRACE

    MK_LBRACE  偏移，并进入状态 66


状态 36

    8 function_decl: VOID ID MK_LPAREN param_list • MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list • MK_COMMA param

    MK_RPAREN  偏移，并进入状态 67
    MK_COMMA   偏移，并进入状态 68


状态 37

   12 param_list: param •

    $default  使用规则 12 以归约 (param_list)


状态 38

   13 param: type • ID
   14      | type • ID dim_fn

    ID  偏移，并进入状态 69


状态 39

   36 id_list: ID dim_decl •
   38 dim_decl: dim_decl • MK_LB cexpr MK_RB

    MK_LB  偏移，并进入状态 63

    $default  使用规则 36 以归约 (id_list)


状态 40

   34 id_list: id_list MK_COMMA • ID
   35        | id_list MK_COMMA • ID dim_decl

    ID  偏移，并进入状态 70


状态 41

   28 type_decl: TYPEDEF VOID id_list MK_SEMICOLON •

    $default  使用规则 28 以归约 (type_decl)


状态 42

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON •

    $default  使用规则 27 以归约 (type_decl)


状态 43

  102 factor: ID • MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID •
  109        | ID • dim_list

    MK_LB      偏移，并进入状态 71
    MK_LPAREN  偏移，并进入状态 72

    $default  使用规则 108 以归约 (var_ref)

    dim_list  转到状态 73


状态 44

   99 factor: CONST •

    $default  使用规则 99 以归约 (factor)


状态 45

   98 factor: OP_NOT • MK_LPAREN relop_expr MK_RPAREN
  101       | OP_NOT • CONST
  104       | OP_NOT • ID MK_LPAREN relop_expr_list MK_RPAREN
  107       | OP_NOT • var_ref

    ID         偏移，并进入状态 74
    CONST      偏移，并进入状态 75
    MK_LPAREN  偏移，并进入状态 76

    var_ref  转到状态 77


状态 46

   97 factor: OP_MINUS • MK_LPAREN relop_expr MK_RPAREN
  100       | OP_MINUS • CONST
  103       | OP_MINUS • ID MK_LPAREN relop_expr_list MK_RPAREN
  106       | OP_MINUS • var_ref

    ID         偏移，并进入状态 78
    CONST      偏移，并进入状态 79
    MK_LPAREN  偏移，并进入状态 80

    var_ref  转到状态 81


状态 47

   96 factor: MK_LPAREN • relop_expr MK_RPAREN

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    relop_expr    转到状态 82
    relop_term    转到状态 49
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 48

   52 init_id: ID OP_ASSIGN relop_expr •
   73 relop_expr: relop_expr • OP_OR relop_term

    OP_OR  偏移，并进入状态 83

    $default  使用规则 52 以归约 (init_id)


状态 49

   72 relop_expr: relop_term •
   75 relop_term: relop_term • OP_AND relop_factor

    OP_AND  偏移，并进入状态 84

    $default  使用规则 72 以归约 (relop_expr)


状态 50

   74 relop_term: relop_factor •

    $default  使用规则 74 以归约 (relop_term)


状态 51

   76 relop_factor: expr •
   77             | expr • rel_op expr
   88 expr: expr • add_op term

    OP_EQ     偏移，并进入状态 85
    OP_NE     偏移，并进入状态 86
    OP_GT     偏移，并进入状态 87
    OP_LT     偏移，并进入状态 88
    OP_GE     偏移，并进入状态 89
    OP_LE     偏移，并进入状态 90
    OP_PLUS   偏移，并进入状态 91
    OP_MINUS  偏移，并进入状态 92

    $default  使用规则 76 以归约 (relop_factor)

    rel_op  转到状态 93
    add_op  转到状态 94


状态 52

   89 expr: term •
   92 term: term • mul_op factor

    OP_TIMES   偏移，并进入状态 95
    OP_DIVIDE  偏移，并进入状态 96

    $default  使用规则 89 以归约 (expr)

    mul_op  转到状态 97


状态 53

   93 term: factor •

    $default  使用规则 93 以归约 (term)


状态 54

  105 factor: var_ref •

    $default  使用规则 105 以归约 (factor)


状态 55

   45 cfactor: CONST •

    $default  使用规则 45 以归约 (cfactor)


状态 56

   46 cfactor: OP_MINUS • cfactor

    CONST      偏移，并进入状态 55
    OP_MINUS   偏移，并进入状态 56
    MK_LPAREN  偏移，并进入状态 57

    cfactor  转到状态 98


状态 57

   47 cfactor: MK_LPAREN • cexpr MK_RPAREN

    CONST      偏移，并进入状态 55
    OP_MINUS   偏移，并进入状态 56
    MK_LPAREN  偏移，并进入状态 57

    cexpr    转到状态 99
    mcexpr   转到状态 59
    cfactor  转到状态 60


状态 58

   37 dim_decl: MK_LB cexpr • MK_RB
   39 cexpr: cexpr • OP_PLUS mcexpr
   40      | cexpr • OP_MINUS mcexpr

    OP_PLUS   偏移，并进入状态 100
    OP_MINUS  偏移，并进入状态 101
    MK_RB     偏移，并进入状态 102


状态 59

   41 cexpr: mcexpr •
   42 mcexpr: mcexpr • OP_TIMES cfactor
   43       | mcexpr • OP_DIVIDE cfactor

    OP_TIMES   偏移，并进入状态 103
    OP_DIVIDE  偏移，并进入状态 104

    $default  使用规则 41 以归约 (cexpr)


状态 60

   44 mcexpr: cfactor •

    $default  使用规则 44 以归约 (mcexpr)


状态 61

    9 function_decl: type ID MK_LPAREN MK_RPAREN • MK_LBRACE block MK_RBRACE

    MK_LBRACE  偏移，并进入状态 105


状态 62

    7 function_decl: type ID MK_LPAREN param_list • MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list • MK_COMMA param

    MK_RPAREN  偏移，并进入状态 106
    MK_COMMA   偏移，并进入状态 68


状态 63

   38 dim_decl: dim_decl MK_LB • cexpr MK_RB

    CONST      偏移，并进入状态 55
    OP_MINUS   偏移，并进入状态 56
    MK_LPAREN  偏移，并进入状态 57

    cexpr    转到状态 107
    mcexpr   转到状态 59
    cfactor  转到状态 60


状态 64

   50 init_id: ID •
   51        | ID • dim_decl
   52        | ID • OP_ASSIGN relop_expr

    OP_ASSIGN  偏移，并进入状态 29
    MK_LB      偏移，并进入状态 30

    $default  使用规则 50 以归约 (init_id)

    dim_decl  转到状态 32


状态 65

   49 init_id_list: init_id_list MK_COMMA init_id •

    $default  使用规则 49 以归约 (init_id_list)


状态 66

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE • block MK_RBRACE

    ID            偏移，并进入状态 108
    INT           偏移，并进入状态 3
    FLOAT         偏移，并进入状态 4
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    TYPEDEF       偏移，并进入状态 5
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    $default  使用规则 22 以归约 (block)

    block      转到状态 115
    decl_list  转到状态 116
    decl       转到状态 11
    type_decl  转到状态 12
    var_decl   转到状态 13
    type       转到状态 117
    stmt_list  转到状态 118
    stmt       转到状态 119
    var_ref    转到状态 120


状态 67

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN • MK_LBRACE block MK_RBRACE

    MK_LBRACE  偏移，并进入状态 121


状态 68

   11 param_list: param_list MK_COMMA • param

    ID     偏移，并进入状态 1
    INT    偏移，并进入状态 3
    FLOAT  偏移，并进入状态 4

    param  转到状态 122
    type   转到状态 38


状态 69

   13 param: type ID •
   14      | type ID • dim_fn

    MK_LB  偏移，并进入状态 123

    $default  使用规则 13 以归约 (param)

    dim_fn  转到状态 124


状态 70

   34 id_list: id_list MK_COMMA ID •
   35        | id_list MK_COMMA ID • dim_decl

    MK_LB  偏移，并进入状态 30

    $default  使用规则 34 以归约 (id_list)

    dim_decl  转到状态 125


状态 71

  111 dim_list: MK_LB • expr MK_RB

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    expr     转到状态 126
    term     转到状态 52
    factor   转到状态 53
    var_ref  转到状态 54


状态 72

  102 factor: ID MK_LPAREN • relop_expr_list MK_RPAREN

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    $default  使用规则 85 以归约 (relop_expr_list)

    relop_expr                转到状态 127
    relop_term                转到状态 49
    relop_factor              转到状态 50
    relop_expr_list           转到状态 128
    nonempty_relop_expr_list  转到状态 129
    expr                      转到状态 51
    term                      转到状态 52
    factor                    转到状态 53
    var_ref                   转到状态 54


状态 73

  109 var_ref: ID dim_list •
  110 dim_list: dim_list • MK_LB expr MK_RB

    MK_LB  偏移，并进入状态 130

    $default  使用规则 109 以归约 (var_ref)


状态 74

  104 factor: OP_NOT ID • MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID •
  109        | ID • dim_list

    MK_LB      偏移，并进入状态 71
    MK_LPAREN  偏移，并进入状态 131

    $default  使用规则 108 以归约 (var_ref)

    dim_list  转到状态 73


状态 75

  101 factor: OP_NOT CONST •

    $default  使用规则 101 以归约 (factor)


状态 76

   98 factor: OP_NOT MK_LPAREN • relop_expr MK_RPAREN

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    relop_expr    转到状态 132
    relop_term    转到状态 49
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 77

  107 factor: OP_NOT var_ref •

    $default  使用规则 107 以归约 (factor)


状态 78

  103 factor: OP_MINUS ID • MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID •
  109        | ID • dim_list

    MK_LB      偏移，并进入状态 71
    MK_LPAREN  偏移，并进入状态 133

    $default  使用规则 108 以归约 (var_ref)

    dim_list  转到状态 73


状态 79

  100 factor: OP_MINUS CONST •

    $default  使用规则 100 以归约 (factor)


状态 80

   97 factor: OP_MINUS MK_LPAREN • relop_expr MK_RPAREN

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    relop_expr    转到状态 134
    relop_term    转到状态 49
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 81

  106 factor: OP_MINUS var_ref •

    $default  使用规则 106 以归约 (factor)


状态 82

   73 relop_expr: relop_expr • OP_OR relop_term
   96 factor: MK_LPAREN relop_expr • MK_RPAREN

    OP_OR      偏移，并进入状态 83
    MK_RPAREN  偏移，并进入状态 135


状态 83

   73 relop_expr: relop_expr OP_OR • relop_term

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    relop_term    转到状态 136
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 84

   75 relop_term: relop_term OP_AND • relop_factor

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    relop_factor  转到状态 137
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 85

   78 rel_op: OP_EQ •

    $default  使用规则 78 以归约 (rel_op)


状态 86

   81 rel_op: OP_NE •

    $default  使用规则 81 以归约 (rel_op)


状态 87

   82 rel_op: OP_GT •

    $default  使用规则 82 以归约 (rel_op)


状态 88

   83 rel_op: OP_LT •

    $default  使用规则 83 以归约 (rel_op)


状态 89

   79 rel_op: OP_GE •

    $default  使用规则 79 以归约 (rel_op)


状态 90

   80 rel_op: OP_LE •

    $default  使用规则 80 以归约 (rel_op)


状态 91

   90 add_op: OP_PLUS •

    $default  使用规则 90 以归约 (add_op)


状态 92

   91 add_op: OP_MINUS •

    $default  使用规则 91 以归约 (add_op)


状态 93

   77 relop_factor: expr rel_op • expr

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    expr     转到状态 138
    term     转到状态 52
    factor   转到状态 53
    var_ref  转到状态 54


状态 94

   88 expr: expr add_op • term

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    term     转到状态 139
    factor   转到状态 53
    var_ref  转到状态 54


状态 95

   94 mul_op: OP_TIMES •

    $default  使用规则 94 以归约 (mul_op)


状态 96

   95 mul_op: OP_DIVIDE •

    $default  使用规则 95 以归约 (mul_op)


状态 97

   92 term: term mul_op • factor

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    factor   转到状态 140
    var_ref  转到状态 54


状态 98

   46 cfactor: OP_MINUS cfactor •

    $default  使用规则 46 以归约 (cfactor)


状态 99

   39 cexpr: cexpr • OP_PLUS mcexpr
   40      | cexpr • OP_MINUS mcexpr
   47 cfactor: MK_LPAREN cexpr • MK_RPAREN

    OP_PLUS    偏移，并进入状态 100
    OP_MINUS   偏移，并进入状态 101
    MK_RPAREN  偏移，并进入状态 141


状态 100

   39 cexpr: cexpr OP_PLUS • mcexpr

    CONST      偏移，并进入状态 55
    OP_MINUS   偏移，并进入状态 56
    MK_LPAREN  偏移，并进入状态 57

    mcexpr   转到状态 142
    cfactor  转到状态 60


状态 101

   40 cexpr: cexpr OP_MINUS • mcexpr

    CONST      偏移，并进入状态 55
    OP_MINUS   偏移，并进入状态 56
    MK_LPAREN  偏移，并进入状态 57

    mcexpr   转到状态 143
    cfactor  转到状态 60


状态 102

   37 dim_decl: MK_LB cexpr MK_RB •

    $default  使用规则 37 以归约 (dim_decl)


状态 103

   42 mcexpr: mcexpr OP_TIMES • cfactor

    CONST      偏移，并进入状态 55
    OP_MINUS   偏移，并进入状态 56
    MK_LPAREN  偏移，并进入状态 57

    cfactor  转到状态 144


状态 104

   43 mcexpr: mcexpr OP_DIVIDE • cfactor

    CONST      偏移，并进入状态 55
    OP_MINUS   偏移，并进入状态 56
    MK_LPAREN  偏移，并进入状态 57

    cfactor  转到状态 145


状态 105

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE • block MK_RBRACE

    ID            偏移，并进入状态 108
    INT           偏移，并进入状态 3
    FLOAT         偏移，并进入状态 4
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    TYPEDEF       偏移，并进入状态 5
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    $default  使用规则 22 以归约 (block)

    block      转到状态 146
    decl_list  转到状态 116
    decl       转到状态 11
    type_decl  转到状态 12
    var_decl   转到状态 13
    type       转到状态 117
    stmt_list  转到状态 118
    stmt       转到状态 119
    var_ref    转到状态 120


状态 106

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN • MK_LBRACE block MK_RBRACE

    MK_LBRACE  偏移，并进入状态 147


状态 107

   38 dim_decl: dim_decl MK_LB cexpr • MK_RB
   39 cexpr: cexpr • OP_PLUS mcexpr
   40      | cexpr • OP_MINUS mcexpr

    OP_PLUS   偏移，并进入状态 100
    OP_MINUS  偏移，并进入状态 101
    MK_RB     偏移，并进入状态 148


状态 108

   32 type: ID •
   61 stmt: ID • MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  108 var_ref: ID •
  109        | ID • dim_list

    MK_LB      偏移，并进入状态 71
    MK_LPAREN  偏移，并进入状态 149

    OP_ASSIGN  使用规则 108 以归约 (var_ref)
    $default   使用规则 32 以归约 (type)

    dim_list  转到状态 73


状态 109

   59 stmt: IF • MK_LPAREN test MK_RPAREN stmt
   60     | IF • MK_LPAREN test MK_RPAREN stmt ELSE stmt

    MK_LPAREN  偏移，并进入状态 150


状态 110

   56 stmt: WHILE • MK_LPAREN test MK_RPAREN stmt

    MK_LPAREN  偏移，并进入状态 151


状态 111

   57 stmt: FOR • MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  偏移，并进入状态 152


状态 112

   55 stmt: MK_LBRACE • block MK_RBRACE

    ID            偏移，并进入状态 108
    INT           偏移，并进入状态 3
    FLOAT         偏移，并进入状态 4
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    TYPEDEF       偏移，并进入状态 5
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    $default  使用规则 22 以归约 (block)

    block      转到状态 153
    decl_list  转到状态 116
    decl       转到状态 11
    type_decl  转到状态 12
    var_decl   转到状态 13
    type       转到状态 117
    stmt_list  转到状态 118
    stmt       转到状态 119
    var_ref    转到状态 120


状态 113

   62 stmt: MK_SEMICOLON •

    $default  使用规则 62 以归约 (stmt)


状态 114

   63 stmt: RETURN • MK_SEMICOLON
   64     | RETURN • relop_expr MK_SEMICOLON

    ID            偏移，并进入状态 43
    CONST         偏移，并进入状态 44
    OP_NOT        偏移，并进入状态 45
    OP_MINUS      偏移，并进入状态 46
    MK_LPAREN     偏移，并进入状态 47
    MK_SEMICOLON  偏移，并进入状态 154

    relop_expr    转到状态 155
    relop_term    转到状态 49
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 115

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block • MK_RBRACE

    MK_RBRACE  偏移，并进入状态 156


状态 116

   19 block: decl_list • stmt_list
   21      | decl_list •
   23 decl_list: decl_list • decl

    ID            偏移，并进入状态 108
    INT           偏移，并进入状态 3
    FLOAT         偏移，并进入状态 4
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    TYPEDEF       偏移，并进入状态 5
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    $default  使用规则 21 以归约 (block)

    decl       转到状态 21
    type_decl  转到状态 12
    var_decl   转到状态 13
    type       转到状态 117
    stmt_list  转到状态 157
    stmt       转到状态 119
    var_ref    转到状态 120


状态 117

   29 var_decl: type • init_id_list MK_SEMICOLON

    ID  偏移，并进入状态 64

    init_id_list  转到状态 23
    init_id       转到状态 24


状态 118

   20 block: stmt_list •
   53 stmt_list: stmt_list • stmt

    ID            偏移，并进入状态 158
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    $default  使用规则 20 以归约 (block)

    stmt     转到状态 159
    var_ref  转到状态 120


状态 119

   54 stmt_list: stmt •

    $default  使用规则 54 以归约 (stmt_list)


状态 120

   58 stmt: var_ref • OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  偏移，并进入状态 160


状态 121

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE • block MK_RBRACE

    ID            偏移，并进入状态 108
    INT           偏移，并进入状态 3
    FLOAT         偏移，并进入状态 4
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    TYPEDEF       偏移，并进入状态 5
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    $default  使用规则 22 以归约 (block)

    block      转到状态 161
    decl_list  转到状态 116
    decl       转到状态 11
    type_decl  转到状态 12
    var_decl   转到状态 13
    type       转到状态 117
    stmt_list  转到状态 118
    stmt       转到状态 119
    var_ref    转到状态 120


状态 122

   11 param_list: param_list MK_COMMA param •

    $default  使用规则 11 以归约 (param_list)


状态 123

   15 dim_fn: MK_LB • expr_null MK_RB

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    $default  使用规则 18 以归约 (expr_null)

    expr_null  转到状态 162
    expr       转到状态 163
    term       转到状态 52
    factor     转到状态 53
    var_ref    转到状态 54


状态 124

   14 param: type ID dim_fn •
   16 dim_fn: dim_fn • MK_LB expr MK_RB

    MK_LB  偏移，并进入状态 164

    $default  使用规则 14 以归约 (param)


状态 125

   35 id_list: id_list MK_COMMA ID dim_decl •
   38 dim_decl: dim_decl • MK_LB cexpr MK_RB

    MK_LB  偏移，并进入状态 63

    $default  使用规则 35 以归约 (id_list)


状态 126

   88 expr: expr • add_op term
  111 dim_list: MK_LB expr • MK_RB

    OP_PLUS   偏移，并进入状态 91
    OP_MINUS  偏移，并进入状态 92
    MK_RB     偏移，并进入状态 165

    add_op  转到状态 94


状态 127

   73 relop_expr: relop_expr • OP_OR relop_term
   87 nonempty_relop_expr_list: relop_expr •

    OP_OR  偏移，并进入状态 83

    $default  使用规则 87 以归约 (nonempty_relop_expr_list)


状态 128

  102 factor: ID MK_LPAREN relop_expr_list • MK_RPAREN

    MK_RPAREN  偏移，并进入状态 166


状态 129

   84 relop_expr_list: nonempty_relop_expr_list •
   86 nonempty_relop_expr_list: nonempty_relop_expr_list • MK_COMMA relop_expr

    MK_COMMA  偏移，并进入状态 167

    $default  使用规则 84 以归约 (relop_expr_list)


状态 130

  110 dim_list: dim_list MK_LB • expr MK_RB

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    expr     转到状态 168
    term     转到状态 52
    factor   转到状态 53
    var_ref  转到状态 54


状态 131

  104 factor: OP_NOT ID MK_LPAREN • relop_expr_list MK_RPAREN

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    $default  使用规则 85 以归约 (relop_expr_list)

    relop_expr                转到状态 127
    relop_term                转到状态 49
    relop_factor              转到状态 50
    relop_expr_list           转到状态 169
    nonempty_relop_expr_list  转到状态 129
    expr                      转到状态 51
    term                      转到状态 52
    factor                    转到状态 53
    var_ref                   转到状态 54


状态 132

   73 relop_expr: relop_expr • OP_OR relop_term
   98 factor: OP_NOT MK_LPAREN relop_expr • MK_RPAREN

    OP_OR      偏移，并进入状态 83
    MK_RPAREN  偏移，并进入状态 170


状态 133

  103 factor: OP_MINUS ID MK_LPAREN • relop_expr_list MK_RPAREN

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    $default  使用规则 85 以归约 (relop_expr_list)

    relop_expr                转到状态 127
    relop_term                转到状态 49
    relop_factor              转到状态 50
    relop_expr_list           转到状态 171
    nonempty_relop_expr_list  转到状态 129
    expr                      转到状态 51
    term                      转到状态 52
    factor                    转到状态 53
    var_ref                   转到状态 54


状态 134

   73 relop_expr: relop_expr • OP_OR relop_term
   97 factor: OP_MINUS MK_LPAREN relop_expr • MK_RPAREN

    OP_OR      偏移，并进入状态 83
    MK_RPAREN  偏移，并进入状态 172


状态 135

   96 factor: MK_LPAREN relop_expr MK_RPAREN •

    $default  使用规则 96 以归约 (factor)


状态 136

   73 relop_expr: relop_expr OP_OR relop_term •
   75 relop_term: relop_term • OP_AND relop_factor

    OP_AND  偏移，并进入状态 84

    $default  使用规则 73 以归约 (relop_expr)


状态 137

   75 relop_term: relop_term OP_AND relop_factor •

    $default  使用规则 75 以归约 (relop_term)


状态 138

   77 relop_factor: expr rel_op expr •
   88 expr: expr • add_op term

    OP_PLUS   偏移，并进入状态 91
    OP_MINUS  偏移，并进入状态 92

    $default  使用规则 77 以归约 (relop_factor)

    add_op  转到状态 94


状态 139

   88 expr: expr add_op term •
   92 term: term • mul_op factor

    OP_TIMES   偏移，并进入状态 95
    OP_DIVIDE  偏移，并进入状态 96

    $default  使用规则 88 以归约 (expr)

    mul_op  转到状态 97


状态 140

   92 term: term mul_op factor •

    $default  使用规则 92 以归约 (term)


状态 141

   47 cfactor: MK_LPAREN cexpr MK_RPAREN •

    $default  使用规则 47 以归约 (cfactor)


状态 142

   39 cexpr: cexpr OP_PLUS mcexpr •
   42 mcexpr: mcexpr • OP_TIMES cfactor
   43       | mcexpr • OP_DIVIDE cfactor

    OP_TIMES   偏移，并进入状态 103
    OP_DIVIDE  偏移，并进入状态 104

    $default  使用规则 39 以归约 (cexpr)


状态 143

   40 cexpr: cexpr OP_MINUS mcexpr •
   42 mcexpr: mcexpr • OP_TIMES cfactor
   43       | mcexpr • OP_DIVIDE cfactor

    OP_TIMES   偏移，并进入状态 103
    OP_DIVIDE  偏移，并进入状态 104

    $default  使用规则 40 以归约 (cexpr)


状态 144

   42 mcexpr: mcexpr OP_TIMES cfactor •

    $default  使用规则 42 以归约 (mcexpr)


状态 145

   43 mcexpr: mcexpr OP_DIVIDE cfactor •

    $default  使用规则 43 以归约 (mcexpr)


状态 146

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block • MK_RBRACE

    MK_RBRACE  偏移，并进入状态 173


状态 147

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE • block MK_RBRACE

    ID            偏移，并进入状态 108
    INT           偏移，并进入状态 3
    FLOAT         偏移，并进入状态 4
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    TYPEDEF       偏移，并进入状态 5
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    $default  使用规则 22 以归约 (block)

    block      转到状态 174
    decl_list  转到状态 116
    decl       转到状态 11
    type_decl  转到状态 12
    var_decl   转到状态 13
    type       转到状态 117
    stmt_list  转到状态 118
    stmt       转到状态 119
    var_ref    转到状态 120


状态 148

   38 dim_decl: dim_decl MK_LB cexpr MK_RB •

    $default  使用规则 38 以归约 (dim_decl)


状态 149

   61 stmt: ID MK_LPAREN • relop_expr_list MK_RPAREN MK_SEMICOLON

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    $default  使用规则 85 以归约 (relop_expr_list)

    relop_expr                转到状态 127
    relop_term                转到状态 49
    relop_factor              转到状态 50
    relop_expr_list           转到状态 175
    nonempty_relop_expr_list  转到状态 129
    expr                      转到状态 51
    term                      转到状态 52
    factor                    转到状态 53
    var_ref                   转到状态 54


状态 150

   59 stmt: IF MK_LPAREN • test MK_RPAREN stmt
   60     | IF MK_LPAREN • test MK_RPAREN stmt ELSE stmt

    ID         偏移，并进入状态 176
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    test          转到状态 177
    assign_expr   转到状态 178
    relop_expr    转到状态 179
    relop_term    转到状态 49
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 151

   56 stmt: WHILE MK_LPAREN • test MK_RPAREN stmt

    ID         偏移，并进入状态 176
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    test          转到状态 180
    assign_expr   转到状态 178
    relop_expr    转到状态 179
    relop_term    转到状态 49
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 152

   57 stmt: FOR MK_LPAREN • assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         偏移，并进入状态 176
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    $default  使用规则 66 以归约 (assign_expr_list)

    assign_expr_list           转到状态 181
    nonempty_assign_expr_list  转到状态 182
    assign_expr                转到状态 183
    relop_expr                 转到状态 179
    relop_term                 转到状态 49
    relop_factor               转到状态 50
    expr                       转到状态 51
    term                       转到状态 52
    factor                     转到状态 53
    var_ref                    转到状态 54


状态 153

   55 stmt: MK_LBRACE block • MK_RBRACE

    MK_RBRACE  偏移，并进入状态 184


状态 154

   63 stmt: RETURN MK_SEMICOLON •

    $default  使用规则 63 以归约 (stmt)


状态 155

   64 stmt: RETURN relop_expr • MK_SEMICOLON
   73 relop_expr: relop_expr • OP_OR relop_term

    OP_OR         偏移，并进入状态 83
    MK_SEMICOLON  偏移，并进入状态 185


状态 156

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE •

    $default  使用规则 10 以归约 (function_decl)


状态 157

   19 block: decl_list stmt_list •
   53 stmt_list: stmt_list • stmt

    ID            偏移，并进入状态 158
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    $default  使用规则 19 以归约 (block)

    stmt     转到状态 159
    var_ref  转到状态 120


状态 158

   61 stmt: ID • MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  108 var_ref: ID •
  109        | ID • dim_list

    MK_LB      偏移，并进入状态 71
    MK_LPAREN  偏移，并进入状态 149

    $default  使用规则 108 以归约 (var_ref)

    dim_list  转到状态 73


状态 159

   53 stmt_list: stmt_list stmt •

    $default  使用规则 53 以归约 (stmt_list)


状态 160

   58 stmt: var_ref OP_ASSIGN • relop_expr MK_SEMICOLON

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    relop_expr    转到状态 186
    relop_term    转到状态 49
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 161

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block • MK_RBRACE

    MK_RBRACE  偏移，并进入状态 187


状态 162

   15 dim_fn: MK_LB expr_null • MK_RB

    MK_RB  偏移，并进入状态 188


状态 163

   17 expr_null: expr •
   88 expr: expr • add_op term

    OP_PLUS   偏移，并进入状态 91
    OP_MINUS  偏移，并进入状态 92

    $default  使用规则 17 以归约 (expr_null)

    add_op  转到状态 94


状态 164

   16 dim_fn: dim_fn MK_LB • expr MK_RB

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    expr     转到状态 189
    term     转到状态 52
    factor   转到状态 53
    var_ref  转到状态 54


状态 165

  111 dim_list: MK_LB expr MK_RB •

    $default  使用规则 111 以归约 (dim_list)


状态 166

  102 factor: ID MK_LPAREN relop_expr_list MK_RPAREN •

    $default  使用规则 102 以归约 (factor)


状态 167

   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA • relop_expr

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    relop_expr    转到状态 190
    relop_term    转到状态 49
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 168

   88 expr: expr • add_op term
  110 dim_list: dim_list MK_LB expr • MK_RB

    OP_PLUS   偏移，并进入状态 91
    OP_MINUS  偏移，并进入状态 92
    MK_RB     偏移，并进入状态 191

    add_op  转到状态 94


状态 169

  104 factor: OP_NOT ID MK_LPAREN relop_expr_list • MK_RPAREN

    MK_RPAREN  偏移，并进入状态 192


状态 170

   98 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN •

    $default  使用规则 98 以归约 (factor)


状态 171

  103 factor: OP_MINUS ID MK_LPAREN relop_expr_list • MK_RPAREN

    MK_RPAREN  偏移，并进入状态 193


状态 172

   97 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN •

    $default  使用规则 97 以归约 (factor)


状态 173

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE •

    $default  使用规则 9 以归约 (function_decl)


状态 174

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block • MK_RBRACE

    MK_RBRACE  偏移，并进入状态 194


状态 175

   61 stmt: ID MK_LPAREN relop_expr_list • MK_RPAREN MK_SEMICOLON

    MK_RPAREN  偏移，并进入状态 195


状态 176

   70 assign_expr: ID • OP_ASSIGN relop_expr
  102 factor: ID • MK_LPAREN relop_expr_list MK_RPAREN
  108 var_ref: ID •
  109        | ID • dim_list

    OP_ASSIGN  偏移，并进入状态 196
    MK_LB      偏移，并进入状态 71
    MK_LPAREN  偏移，并进入状态 72

    $default  使用规则 108 以归约 (var_ref)

    dim_list  转到状态 73


状态 177

   59 stmt: IF MK_LPAREN test • MK_RPAREN stmt
   60     | IF MK_LPAREN test • MK_RPAREN stmt ELSE stmt

    MK_RPAREN  偏移，并进入状态 197


状态 178

   69 test: assign_expr •

    $default  使用规则 69 以归约 (test)


状态 179

   71 assign_expr: relop_expr •
   73 relop_expr: relop_expr • OP_OR relop_term

    OP_OR  偏移，并进入状态 83

    $default  使用规则 71 以归约 (assign_expr)


状态 180

   56 stmt: WHILE MK_LPAREN test • MK_RPAREN stmt

    MK_RPAREN  偏移，并进入状态 198


状态 181

   57 stmt: FOR MK_LPAREN assign_expr_list • MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  偏移，并进入状态 199


状态 182

   65 assign_expr_list: nonempty_assign_expr_list •
   67 nonempty_assign_expr_list: nonempty_assign_expr_list • MK_COMMA assign_expr

    MK_COMMA  偏移，并进入状态 200

    $default  使用规则 65 以归约 (assign_expr_list)


状态 183

   68 nonempty_assign_expr_list: assign_expr •

    $default  使用规则 68 以归约 (nonempty_assign_expr_list)


状态 184

   55 stmt: MK_LBRACE block MK_RBRACE •

    $default  使用规则 55 以归约 (stmt)


状态 185

   64 stmt: RETURN relop_expr MK_SEMICOLON •

    $default  使用规则 64 以归约 (stmt)


状态 186

   58 stmt: var_ref OP_ASSIGN relop_expr • MK_SEMICOLON
   73 relop_expr: relop_expr • OP_OR relop_term

    OP_OR         偏移，并进入状态 83
    MK_SEMICOLON  偏移，并进入状态 201


状态 187

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE •

    $default  使用规则 8 以归约 (function_decl)


状态 188

   15 dim_fn: MK_LB expr_null MK_RB •

    $default  使用规则 15 以归约 (dim_fn)


状态 189

   16 dim_fn: dim_fn MK_LB expr • MK_RB
   88 expr: expr • add_op term

    OP_PLUS   偏移，并进入状态 91
    OP_MINUS  偏移，并进入状态 92
    MK_RB     偏移，并进入状态 202

    add_op  转到状态 94


状态 190

   73 relop_expr: relop_expr • OP_OR relop_term
   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr •

    OP_OR  偏移，并进入状态 83

    $default  使用规则 86 以归约 (nonempty_relop_expr_list)


状态 191

  110 dim_list: dim_list MK_LB expr MK_RB •

    $default  使用规则 110 以归约 (dim_list)


状态 192

  104 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN •

    $default  使用规则 104 以归约 (factor)


状态 193

  103 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN •

    $default  使用规则 103 以归约 (factor)


状态 194

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE •

    $default  使用规则 7 以归约 (function_decl)


状态 195

   61 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN • MK_SEMICOLON

    MK_SEMICOLON  偏移，并进入状态 203


状态 196

   70 assign_expr: ID OP_ASSIGN • relop_expr

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    relop_expr    转到状态 204
    relop_term    转到状态 49
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 197

   59 stmt: IF MK_LPAREN test MK_RPAREN • stmt
   60     | IF MK_LPAREN test MK_RPAREN • stmt ELSE stmt

    ID            偏移，并进入状态 158
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    stmt     转到状态 205
    var_ref  转到状态 120


状态 198

   56 stmt: WHILE MK_LPAREN test MK_RPAREN • stmt

    ID            偏移，并进入状态 158
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    stmt     转到状态 206
    var_ref  转到状态 120


状态 199

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON • relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         偏移，并进入状态 43
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    $default  使用规则 85 以归约 (relop_expr_list)

    relop_expr                转到状态 127
    relop_term                转到状态 49
    relop_factor              转到状态 50
    relop_expr_list           转到状态 207
    nonempty_relop_expr_list  转到状态 129
    expr                      转到状态 51
    term                      转到状态 52
    factor                    转到状态 53
    var_ref                   转到状态 54


状态 200

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA • assign_expr

    ID         偏移，并进入状态 176
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    assign_expr   转到状态 208
    relop_expr    转到状态 179
    relop_term    转到状态 49
    relop_factor  转到状态 50
    expr          转到状态 51
    term          转到状态 52
    factor        转到状态 53
    var_ref       转到状态 54


状态 201

   58 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON •

    $default  使用规则 58 以归约 (stmt)


状态 202

   16 dim_fn: dim_fn MK_LB expr MK_RB •

    $default  使用规则 16 以归约 (dim_fn)


状态 203

   61 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON •

    $default  使用规则 61 以归约 (stmt)


状态 204

   70 assign_expr: ID OP_ASSIGN relop_expr •
   73 relop_expr: relop_expr • OP_OR relop_term

    OP_OR  偏移，并进入状态 83

    $default  使用规则 70 以归约 (assign_expr)


状态 205

   59 stmt: IF MK_LPAREN test MK_RPAREN stmt •
   60     | IF MK_LPAREN test MK_RPAREN stmt • ELSE stmt

    ELSE  偏移，并进入状态 209

    ELSE      [使用规则 59 以归约 (stmt)]
    $default  使用规则 59 以归约 (stmt)


状态 206

   56 stmt: WHILE MK_LPAREN test MK_RPAREN stmt •

    $default  使用规则 56 以归约 (stmt)


状态 207

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list • MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  偏移，并进入状态 210


状态 208

   67 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr •

    $default  使用规则 67 以归约 (nonempty_assign_expr_list)


状态 209

   60 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE • stmt

    ID            偏移，并进入状态 158
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    stmt     转到状态 211
    var_ref  转到状态 120


状态 210

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON • assign_expr_list MK_RPAREN stmt

    ID         偏移，并进入状态 176
    CONST      偏移，并进入状态 44
    OP_NOT     偏移，并进入状态 45
    OP_MINUS   偏移，并进入状态 46
    MK_LPAREN  偏移，并进入状态 47

    $default  使用规则 66 以归约 (assign_expr_list)

    assign_expr_list           转到状态 212
    nonempty_assign_expr_list  转到状态 182
    assign_expr                转到状态 183
    relop_expr                 转到状态 179
    relop_term                 转到状态 49
    relop_factor               转到状态 50
    expr                       转到状态 51
    term                       转到状态 52
    factor                     转到状态 53
    var_ref                    转到状态 54


状态 211

   60 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE stmt •

    $default  使用规则 60 以归约 (stmt)


状态 212

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list • MK_RPAREN stmt

    MK_RPAREN  偏移，并进入状态 213


状态 213

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN • stmt

    ID            偏移，并进入状态 158
    IF            偏移，并进入状态 109
    WHILE         偏移，并进入状态 110
    FOR           偏移，并进入状态 111
    MK_LBRACE     偏移，并进入状态 112
    MK_SEMICOLON  偏移，并进入状态 113
    RETURN        偏移，并进入状态 114

    stmt     转到状态 214
    var_ref  转到状态 120


状态 214

   57 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt •

    $default  使用规则 57 以归约 (stmt)
